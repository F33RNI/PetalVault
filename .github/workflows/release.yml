name: Build binary files for release

on:
  release:
    types:
      - 'created'
      - 'edited'

jobs:
  build-main:
    runs-on: ${{ matrix.os }}
    name: Build on ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
          - os: ubuntu-latest
          - os: macos-latest
          - os: macos-12

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - run: pip install --upgrade -r requirements.txt
    - run: pip install pyinstaller
    - run: pyinstaller main.spec
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/*

  build-from-docker:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os: linux
            arch: amd64
          - os: linux
            arch: arm64

    runs-on: 'ubuntu-latest'

    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Setup Python for parsing PetalVault version
        uses: actions/setup-python@v5
      - name: Parse PetalVault version
        run: echo "petalvault_version=`python -c 'from _version import __version__; print(__version__)'`" >> "$GITHUB_ENV"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Docker Image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform.os }}/${{ matrix.platform.arch }}
          outputs: docker-output
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - run: mkdir dist
      - run: cp docker-output/app/petalvault dist/petalvault-${{ env.petalvault_version }}-${{ matrix.platform.os}}-${{ matrix.platform.arch }}
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*
